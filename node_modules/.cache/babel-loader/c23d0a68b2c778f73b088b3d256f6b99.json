{"ast":null,"code":"var _jsxFileName = \"/home/acdr/apprendre/Udemy/react-rmdb/src/components/Home.js\";\nimport React, { useState } from 'react';\nimport { POPULAR_BASE_URL, SEARCH_BASE_URL, POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config'; //Components import\n\nimport HeroImages from './elements/HeroImage';\nimport Gird from './elements/Grid';\nimport MovieThumb from './elements/MovieThumb';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner';\nimport SearchBar from './elements/SearchBar'; //Custom Hook\n\nimport { useHomeFetch } from './hooks/useHomeFetch';\nimport NoImage from './images/no_image.jpg';\n\nconst Home = () => {\n  var allocine = require('allocine-api');\n\n  allocine.api('search', {\n    q: 'spiderman',\n    filter: 'movie'\n  }, function (error, results) {\n    if (error) {\n      console.log('Error : ' + error);\n      return;\n    }\n\n    console.log('Voici les données retournées par l\\'API Allociné:');\n    console.log(results);\n  });\n  allocine.api('search', {\n    q: 'spiderman',\n    filter: 'movie'\n  }, function (error, results) {\n    if (error) {\n      console.log('Error : ' + error);\n      return;\n    }\n\n    console.log('Voici les données retournées par l\\'API Allociné:');\n    console.log(results);\n  });\n  const [{\n    state: {\n      movies,\n      currentPage,\n      totalPages,\n      heroImage\n    },\n    loading,\n    error\n  }, fetchMovies] = useHomeFetch();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const searchMovies = search => {\n    const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\n    setSearchTerm(search);\n    fetchMovies(endpoint);\n  };\n\n  const loadMoreMovies = () => {\n    const searchEndPoint = `${SEARCH_BASE_URL}${searchTerm}&page=${currentPage + 1}`;\n    const popualEndPoint = `${POPULAR_BASE_URL}&page=${currentPage + 1}`;\n    const endpoint = searchTerm ? searchEndPoint : popualEndPoint;\n    fetchMovies(endpoint);\n  };\n\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Something went wrong....\");\n  if (!movies[0]) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  });\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, !searchTerm ? React.createElement(HeroImages, {\n    image: `${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`,\n    title: heroImage.original_title,\n    text: heroImage.overview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }) : '', React.createElement(SearchBar, {\n    callback: searchMovies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Gird, {\n    header: searchTerm ? 'Search Result' : 'Popular Movies',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, movies.map(movie => React.createElement(MovieThumb, {\n    key: movie.id,\n    clickable: true,\n    image: movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage,\n    movieId: movie.id,\n    movieName: movie.original_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))), loading && React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), currentPage < totalPages && !loading && React.createElement(LoadMoreBtn, {\n    text: \"Load More\",\n    callback: loadMoreMovies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/acdr/apprendre/Udemy/react-rmdb/src/components/Home.js"],"names":["React","useState","POPULAR_BASE_URL","SEARCH_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","IMAGE_BASE_URL","HeroImages","Gird","MovieThumb","LoadMoreBtn","Spinner","SearchBar","useHomeFetch","NoImage","Home","allocine","require","api","q","filter","error","results","console","log","state","movies","currentPage","totalPages","heroImage","loading","fetchMovies","searchTerm","setSearchTerm","searchMovies","search","endpoint","loadMoreMovies","searchEndPoint","popualEndPoint","backdrop_path","original_title","overview","map","movie","id","poster_path"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {\n    POPULAR_BASE_URL,\n    SEARCH_BASE_URL,\n    POSTER_SIZE,\n    BACKDROP_SIZE,\n    IMAGE_BASE_URL} from '../config';\n\n//Components import\nimport HeroImages from './elements/HeroImage';\nimport Gird from './elements/Grid';\nimport MovieThumb from './elements/MovieThumb';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner';\nimport SearchBar from './elements/SearchBar';\n\n//Custom Hook\nimport {useHomeFetch} from './hooks/useHomeFetch'\n\n\nimport NoImage from './images/no_image.jpg';\n\nconst Home=()=>{\n    var allocine = require('allocine-api');\n    allocine.api('search', {q: 'spiderman', filter: 'movie'}, function(error, results) {\n      if(error) { console.log('Error : '+ error); return; }\n      \n      console.log('Voici les données retournées par l\\'API Allociné:');\n      console.log(results);\n  });\n  allocine.api('search', {q: 'spiderman', filter: 'movie'}, function(error, results) {\n    if(error) { console.log('Error : '+ error); return; }\n    \n    console.log('Voici les données retournées par l\\'API Allociné:');\n    console.log(results);\n});\n    const[\n        {\n            state:{movies,currentPage,totalPages,heroImage},\n            loading,\n            error\n        },\n        fetchMovies,\n    ]=useHomeFetch();\n    const[searchTerm,setSearchTerm]=useState('')\n\n    const searchMovies=search=>{\n        const endpoint= search ? SEARCH_BASE_URL+search:POPULAR_BASE_URL;\n        setSearchTerm(search);\n        fetchMovies(endpoint)\n    }\n\n    const loadMoreMovies=()=>{\n        const searchEndPoint=`${SEARCH_BASE_URL}${searchTerm}&page=${currentPage+1}`;\n        const popualEndPoint=`${POPULAR_BASE_URL}&page=${currentPage+1}`;\n    \n        const endpoint = searchTerm ? searchEndPoint :popualEndPoint;\n        fetchMovies(endpoint)\n    \n    }\n\n    if(error) return<div>Something went wrong....</div>;\n    if(!movies[0])return<Spinner/>;\n\n    return(   \n        <React.Fragment>\n\n            {!searchTerm?<HeroImages \n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n                title={heroImage.original_title}\n                text={heroImage.overview}    \n            />:''}\n            <SearchBar callback={searchMovies}/>\n            <Gird header={searchTerm ? 'Search Result': 'Popular Movies'}>\n                \n                {movies.map(movie=>(\n                    \n                    <MovieThumb\n                    key= {movie.id}\n                    clickable\n                    image={\n                        movie.poster_path\n                        ?`${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                        :NoImage\n                    }\n                    movieId={movie.id}\n                    movieName={movie.original_title}\n                    />\n                ))\n\n                }\n            </Gird>\n            {loading &&<Spinner/>}\n            {currentPage<totalPages && !loading &&(\n                <LoadMoreBtn\n                text=\"Load More\"\n                callback={loadMoreMovies}\n                />\n            )\n            }\n        </React.Fragment>\n    )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}