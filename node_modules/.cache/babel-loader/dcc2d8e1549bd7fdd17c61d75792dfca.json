{"ast":null,"code":"import { useState, useEffect, useCallback } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nexport const useMovieFetch = movieId => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const fetchData = useCallback(async () => {\n    setError(false);\n    setLoading(true);\n\n    try {\n      const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n      const result = await (await fetch(endpoint)).json();\n      const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n      const creditsResult = await (await fetch(creditsEndpoint)).json();\n      const directors = creditsResult.crew.filter(member => member.job === 'Director');\n      setState({ ...result,\n        actor: creditsResult.cast,\n        directors\n      });\n    } catch (error) {\n      setError(true);\n    }\n\n    setLoading(false);\n  }, [movieId]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return [state, loading, error];\n};","map":{"version":3,"sources":["/home/acdr/apprendre/Udemy/react-rmdb/src/components/hooks/useMovieFetch.js"],"names":["useState","useEffect","useCallback","API_URL","API_KEY","useMovieFetch","movieId","state","setState","loading","setLoading","error","setError","fetchData","endpoint","result","fetch","json","creditsEndpoint","creditsResult","directors","crew","filter","member","job","actor","cast"],"mappings":"AAAA,SAAQA,QAAR,EAAiBC,SAAjB,EAA2BC,WAA3B,QAA6C,OAA7C;AACA,SAAQC,OAAR,EAAgBC,OAAhB,QAA8B,cAA9B;AAEA,OAAO,MAAMC,aAAa,GAACC,OAAO,IAAE;AAChC,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAiBR,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAK,CAACS,OAAD,EAASC,UAAT,IAAqBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAK,CAACW,KAAD,EAAOC,QAAP,IAAiBZ,QAAQ,CAAC,KAAD,CAA9B;AAEA,QAAMa,SAAS,GAAGX,WAAW,CAAC,YAAS;AACnCU,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAG;AACC,YAAMI,QAAQ,GAAE,GAAEX,OAAQ,SAAQG,OAAQ,YAAWF,OAAQ,EAA7D;AACA,YAAMW,MAAM,GAAC,MAAK,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAAlB;AAEA,YAAMC,eAAe,GAAE,GAAEf,OAAQ,SAAQG,OAAQ,oBAAmBF,OAAQ,EAA5E;AACA,YAAMe,aAAa,GAAC,MAAK,CAAC,MAAMH,KAAK,CAACE,eAAD,CAAZ,EAA+BD,IAA/B,EAAzB;AAEA,YAAMG,SAAS,GAACD,aAAa,CAACE,IAAd,CAAmBC,MAAnB,CACdC,MAAM,IAAEA,MAAM,CAACC,GAAP,KAAa,UADP,CAAhB;AAGAhB,MAAAA,QAAQ,CAAC,EACP,GAAGO,MADI;AAEPU,QAAAA,KAAK,EAACN,aAAa,CAACO,IAFb;AAGPN,QAAAA;AAHO,OAAD,CAAR;AAKD,KAfH,CAgBA,OAAMT,KAAN,EAAY;AACRC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACLF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACC,GAvB4B,EAuB3B,CAACJ,OAAD,CAvB2B,CAA7B;AAwBAL,EAAAA,SAAS,CAAC,MAAI;AACZY,IAAAA,SAAS;AACV,GAFQ,EAEP,CAACA,SAAD,CAFO,CAAT;AAGA,SAAM,CAACN,KAAD,EAAOE,OAAP,EAAeE,KAAf,CAAN;AACH,CAjCM","sourcesContent":["import {useState,useEffect,useCallback} from 'react';\nimport {API_URL,API_KEY} from '../../config';\n\nexport const useMovieFetch=movieId=>{\n    const[state,setState]=useState({});\n    const[loading,setLoading]=useState(true);\n    const[error,setError]=useState(false);\n\n    const fetchData = useCallback(async()=>{\n        setError(false);\n        setLoading(true);\n        try{\n            const endpoint=`${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n            const result=await(await fetch(endpoint)).json();\n\n            const creditsEndpoint=`${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n            const creditsResult=await(await fetch(creditsEndpoint)).json();\n\n            const directors=creditsResult.crew.filter(\n              member=>member.job==='Director'\n            );\n            setState({\n              ...result,\n              actor:creditsResult.cast,\n              directors,\n            })\n          }\n        catch(error){\n            setError(true);\n        }\n    setLoading(false);\n    },[movieId])\n    useEffect(()=>{\n      fetchData();\n    },[fetchData])\n    return[state,loading,error];\n}"]},"metadata":{},"sourceType":"module"}